{"ast":null,"code":"var _jsxFileName = \"/Users/sh/Documents/my-web/client/src/router/pages/post.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Markdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/contents/post1.md\").then(response => {\n      response.text();\n      console.log(response);\n      return response.text();\n    }).then(text => setPost(text)).catch(error => console.error(\"Error loading markdown:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Markdown, {\n      children: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"HM/hnm267BlhP+iw7LhAp7yvato=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useEffect","useState","useParams","Markdown","jsxDEV","_jsxDEV","Post","_s","id","post","setPost","fetch","then","response","text","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sh/Documents/my-web/client/src/router/pages/post.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Markdown from \"react-markdown\";\n\nfunction Post() {\n  const { id } = useParams();\n  const [post, setPost] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/contents/post1.md\")\n      .then((response) => {\n        response.text();\n        console.log(response);\n        return response.text();\n      })\n      .then((text) => setPost(text))\n      .catch((error) => console.error(\"Error loading markdown:\", error));\n  }, []);\n\n  return (\n    <div>\n      <Markdown>{post}</Markdown>\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,oBAAoB,CAAC,CACxBC,IAAI,CAAEC,QAAQ,IAAK;MAClBA,QAAQ,CAACC,IAAI,CAAC,CAAC;MACfC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEE,IAAI,IAAKJ,OAAO,CAACI,IAAI,CAAC,CAAC,CAC7BG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACF,QAAQ;MAAAgB,QAAA,EAAEV;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAAChB,EAAA,CApBQD,IAAI;EAAA,QACIJ,SAAS;AAAA;AAAAsB,EAAA,GADjBlB,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}