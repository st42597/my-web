{"ast":null,"code":"var _jsxFileName = \"/Users/sh/Documents/my-web/client/src/router/pages/posts.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./posts.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"/contents/postList.json\").then(response => response.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    }).catch(error => console.error(\"Error loading posts:\", error));\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  const postList = posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n    to: `${post}`,\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"subtitle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, post, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [postList, /*#__PURE__*/_jsxDEV(Link, {\n      to: `${post}`,\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"subtitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, post, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","postList","map","post","to","className","_c","$RefreshReg$"],"sources":["/Users/sh/Documents/my-web/client/src/router/pages/posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./posts.css\";\nimport { Link } from \"react-router-dom\";\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"/contents/postList.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts(data);\n        setLoading(false);\n      })\n      .catch((error) => console.error(\"Error loading posts:\", error));\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const postList = posts.map((post) => (\n    <Link to={`${post}`} className=\"post-container\" key={post}>\n      <h1>{post}</h1>\n      <h2>subtitle</h2>\n    </Link>\n  ));\n\n  return (\n    <div className=\"posts-container\">\n      {postList}\n      <Link to={`${post}`} className=\"post-container\" key={post}>\n        <h1>{post}</h1>\n        <h2>subtitle</h2>\n      </Link>\n    </div>\n  );\n}\n\nexport default Posts;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,aAAa;AACpB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,yBAAyB,CAAC,CAC7BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIR,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,QAAQ,GAAGjB,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBAC9BtB,OAAA,CAACF,IAAI;IAACyB,EAAE,EAAE,GAAGD,IAAI,EAAG;IAACE,SAAS,EAAC,gBAAgB;IAAAT,QAAA,gBAC7Cf,OAAA;MAAAe,QAAA,EAAKO;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfnB,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,GAFkCG,IAAI;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGnD,CACP,CAAC;EAEF,oBACEnB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAT,QAAA,GAC7BK,QAAQ,eACTpB,OAAA,CAACF,IAAI;MAACyB,EAAE,EAAE,GAAGD,IAAI,EAAG;MAACE,SAAS,EAAC,gBAAgB;MAAAT,QAAA,gBAC7Cf,OAAA;QAAAe,QAAA,EAAKO;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfnB,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFkCG,IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjB,EAAA,CAjCQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAmCd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}