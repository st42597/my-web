# HTTP (80번 포트) 리디렉션을 HTTPS (443번 포트)로 강제
server {
    listen 80;
    server_name willki.dev www.willki.dev;  # 자신의 도메인 이름으로 변경

    # Certbot을 위한 ACME challenge (SSL 인증용)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 모든 HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

# HTTPS (443번 포트) 설정
server {
    listen 443 ssl;
    server_name willki.dev www.willki.dev;  # 자신의 도메인 이름으로 변경

    ssl_certificate /etc/letsencrypt/live/willki.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/willki.dev/privkey.pem;

    # SSL 설정 (보안 강화를 위해 설정)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;

    # Certbot 자동 갱신을 위한 디렉토리
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # React 애플리케이션에 대한 리버스 프록시 설정
    location / {
        proxy_pass http://client:3000;  # React 앱이 실행되는 컨테이너 이름 및 포트 (docker-compose 사용시)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # React에서 HTML5 모드(History API) 사용시 URL 리다이렉션을 올바르게 처리하도록 설정
        try_files $uri /index.html;
    }
}